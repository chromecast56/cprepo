#include <bits/stdc++.h>
#include"BigInt.h"
#include"RSA.h"
using namespace std;
typedef long long ll;

string num_to_ASCII(BigInt x) {
    string str = x.toString();
    //assert(str.size()%3==0);
    if (str.size()%3!=0)
        return "INVALID";

    string res;
    for (int i=0;i<str.size();i+=3)
        res += (char) (100*(str[i]-'1') + 10*(str[i+1]-'0') + (str[i+2]-'0'));
    return res;
}
BigInt ASCII_to_num(string x) {
    BigInt res = 0;
    for (auto ch: x)
        res = res*1000 + (ch+100);
    return res;
}
bool verify(BigInt S,BigInt e,BigInt P,BigInt n) {
    return pow(S,e,n) == P;
}
int main()
{
    vector<BigInt> n(3),e(3),E(3);
    vector<string> names = {"Alice","Bob","Dave"};
    n[0] = "76658177305027745952631719056705996813842536289251500683261184543556255161304991640490427342739196690985988361653741113103098879695402379917606571643825715761882994534703";
    n[1] = "305305799846472299868002515458930157177903223108162710252913053729390747860737704417309741537399438511250989442729880781658025831833386498939";
    n[2] = "61823435968160437417469491157734955693190192084429162238180686630269127581382430522764865425365025843237298546732978005917453969903";
    e[0] = "324382479328749283092183091832019840198400001"; e[1] = "349874928174912837921492180000001"; e[2] = "3843243287434824441111878911001";
    BigInt phiD("61823435968160437417469491157734955693190192084429162238180686622392533899929241536658509172593305085911230229647058820648322486488");
    E[0] = "192673410575232178904649776915190700998989853537815830553230611421742385992522416989509275862058211339709950929";
    E[1] = "11086722953882983852431944511576952516550372827816915921973944718976810268666675210351469628970964240272091459974947601880432783056689928327962090547865754927288993076429";
    E[2] = "1834496602541743526158189555689903156371898111774868041164889421551770983263334034443653217840819146984865628720631961622548297373876065576";

    BigInt dD = inv(e[2],phiD);
    if (dD.sign==-1)
        dD = dD+phiD;
    cout << endl;
    for (int i=0;i<3;i++) //i=1
        for (int j=0;j<3;j++) //j=0
            cout << num_to_ASCII(pow(pow(E[i],e[j],n[j]),dD,n[2])) << '\n';

    return 0;
}